<?php 
	# 浏览器传值
		# 表单传值
			# post传值:数据以post形式传输 : : : <form method='POST' action='?'>....</form>
			#  get传值: 将数据绑定到URL(name=value)
		# URL传值
			# URL后增加参数 : : : http://www.XXX.com/index.php?name=张三&age=18
	# 服务器接收数据
		# get 接收
		# $_GET:接收get方式提交的数据(URL传值),将浏览器提交的数据的名字作为一个数组的下标,值作为对应下标的元素值
		# $_POST:接收post方式提交的数据（form表单）
	# GET和POST的区别
		# 1.表单对应的提交方式区别：METHOD=“GET/POST”
		# 2.数据提交过程区别：GET将所有的数据拼接到URL（name=值&name2=值2…），POST提交的数据是看不到的
		# 3.GET方式不安全，POST方式相对安全
		# 4.GET方式传输数据，数据量小（2KB），post方式基本无限制（8M）
		# 5.GET提交数据效率比POST要高# 
	#  如何选择表单提交方式？
		# 1.如果数据安全性要求高：使用post提交
		# 2.如果数据量比较大，使用post提交
	# checkbox提交数据
	# 保存checkbox数据
		/*因为checkbox往往是多选，PHP最终接收的数据会形成一个数组，但是数组不能存储，需要转化成字符串才能存储。所以，将爱好转换成字符串保存到数据库。*/
		# implode：将数组元素变成字符串
	# checkbox数据显示	
		# 将用户之前提交的，选中的数据，在用户进入之后，能够自动勾选上。
		# checkbox被选中？
			# checkbox有一个checked属性，一旦某个checkbox拥有该属性，那么就会被勾选上
		# 如何判断选中的是哪一个
			# a)将用户选中的checkbox变成数组
			# b)判断当前的checkbox的值，是否在数组中：in_array()，判断当前元素是否在数组中，如果存在返回TRUE，否则返回FALSE
# 数据传输方式
		# 字符串传输方式
			# 普通的数据传输都是基于此方式
		# 二进制格式传输
			#文件的传输:图片,普通文件
# 文件上传
		# 概念：从一台电脑上，将文件传输到另外一台电脑上。
		# web：从客户端机器（用户）上传到服务端机器。
		# get或者post方式不能直接进行二进制文件的传输。get是不能传输二进制文件，post需要搭配一个属性才能进行文件传输。
# 文件上传分为两个步骤：
	# 1.客户端用户上传
		# a)增加文件上传的表单域
		# b)用户选择上传文件
		# c)点击上传，将文件发送给服务器
	# 2.服务端接收
		# form表单使用post方式提交数据，因此使用post接收数据：接收到的是文件的名字
	# 注意:文件上传必须要在服务器端先开启文件上传的功能。(默认开启)
		# file_uploads=on	//是否允许文件上传,默认开启
		# upload_tmp_dir=	//文件上传到服务器后产生的临时文件路径,如果没有指定临时文件目录,那么使用系统的临时目录,一般会修改配置文件,指定临时目录
		# upload_max_filesize = 2M //允许单个上传文件的最大值
		# max_file_uploads = 20	//一次上传文件允许的最大数目
	#修改配置文件
		#文件上传的临时路径给更换:
		# upload_tmp_dir=URL(配置文件中;分号是注释)
		# post默认提交字符流数据，不能提交二进制数据，如果需要提交二进制数据，需要给表单额外增加一个属性：enctype=”multipart/form-data”
		#### 文件上传到服务器的时候，先存放在临时目录里。PHP会用一组变量来保存临时文件。当脚本执行结束，PHP会释放全部的所占内存，因此文件这部分信息都会被操作系统回收，从而看不到临时文件，最终也没有实现文件的上传。
	# 验证文件合法性
		#只需要验证文件信息里的error信息，只要为0表示没有任何错误。
		# 文件上传错误
	# 移动临时文件
		# PHP提供了两个函数来实现文件的移动
		# move_uploaded_file：将文件直接移动到目标路径，不会保留原文件
		# copy：将文件复制到目标路径，会保留原文件
	# 封装上传文件函数
		# ini_get：通过配置项，获取php.ini中对应配置项的值
?>